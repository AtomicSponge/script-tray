# Workflow for building and creating a release
name: Build/release

on:
  push:
    tags:
     - v*.*.*

env:
  NODE_VERSION: 20.x

jobs:
  build:
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    steps:
      # Related https://github.com/electron-userland/electron-builder/issues/4181
      - name: Install libarchive-tools for pacman build
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get install libarchive-tools
      # Checkout source & setup NodeJS
      - name: Checkout
        uses: actions/checkout@v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }} 
      # Run the build
      - run: npm ci
      - run: npm run dist
      # Create new latest release
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(matrix.os, 'ubuntu')
        with:
          make_latest: true
          name: Script Tray ${{ step.tag_name }}
      # Upload the artifacts to the release
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(matrix.os, 'macos')
        with:
          append_body: true
          fail_on_unmatched_files: true
          files: |
            release/*.dmg
            release/*.pkg
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(matrix.os, 'ubuntu')
        with:
          append_body: true
          fail_on_unmatched_files: true
          files: |
            release/*.AppImage
            release/*.deb
            release/*.rpm
            release/*.pacman
      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(matrix.os, 'windows')
        with:
          append_body: true
          fail_on_unmatched_files: true
          files: |
            release/*.exe